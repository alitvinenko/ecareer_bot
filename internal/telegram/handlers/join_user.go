package handlers

import (
	"context"
	"fmt"
	"github.com/alitvinenko/ecareer_bot/internal/service"
	tele "gopkg.in/telebot.v3"
	"log"
)

type JoinUserHandler struct {
	clubMemberService service.ClubMemberService
}

func NewJoinUserHandler(clubMemberService service.ClubMemberService) *JoinUserHandler {
	return &JoinUserHandler{clubMemberService: clubMemberService}
}

func (h *JoinUserHandler) Handle(c tele.Context) error {
	if c.Message().UserJoined.IsBot {
		return nil
	}

	userID := int(c.Message().UserJoined.ID)
	username := c.Message().UserJoined.Username

	err := h.clubMemberService.AddIfNotExists(context.Background(), userID, username)
	if err != nil {
		log.Printf("error on load or create a new chat member: %v", err)

		return c.Reply("–ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ —á–ª–µ–Ω–∞ –∫–ª—É–±–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞")
	}

	message := `üëã –ü—Ä–∏–≤–µ—Ç! 
    
–Ø *–±–æ—Ç-–ö–∞—Ä—å–µ—Ä–∏—Å—Ç* - –≥–ª–∞–≤–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –∏ —Ç–≤–æ–π –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä –ø–æ –ö–ª—É–±—É ¬´–ö–∞—Ä—å–µ—Ä–∞ –∏ –ë–∏–∑–Ω–µ—Å —Å –ï–∫–∞—Ç–µ—Ä–∏–Ω–æ–π –ï–≤—Å—Ç–∞—Ñ—å–µ–≤–æ–π¬ª –∏ –ù–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤—É ¬´–ö–∞—Ä—å–µ—Ä–∞ –º–µ—á—Ç—ã¬ª. 
    
–Ø –ø–æ–∑–Ω–∞–∫–æ–º–ª—é —Ç–µ–±—è —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –∏ —Ç—Ä–∞–¥–∏—Ü–∏—è–º–∏ –ö–ª—É–±–∞ - –∏ —Ä–∞—Å—Å–∫–∞–∂—É, –∫–∞–∫ –º—ã –±—É–¥–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–µ. 
    
–°–µ–π—á–∞—Å —è –º–æ–≥—É –ø–æ–º–æ—á—å —Ç–µ–±–µ:
1Ô∏è‚É£ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ –æ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∏ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ –ö–ª—É–±–∞
2Ô∏è‚É£ –∑–∞–ø–æ–ª–Ω–∏—Ç—å —Ç–≤–æ—é –≤–∏–∑–∏—Ç–∫—É
3Ô∏è‚É£ –ø–æ–∫–∞–∑–∞—Ç—å –≤–∏–∑–∏—Ç–∫–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫–ª—É–±–∞, –ø–æ–∫–∞–∑–∞—Ç—å —Ñ–æ—Ç–æ
4Ô∏è‚É£ –¥–∞—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–≤–æ–¥–Ω—ã–µ —É—Ä–æ–∫–∏ –≤ –Ω–∞—Å—Ç–∞–≤–Ω–∏—á–µ—Å—Ç–≤–µ
5Ô∏è‚É£ —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –∏ –ø–æ–∫–∞–∑–∞—Ç—å –≥–¥–µ —á—Ç–æ –ª–µ–∂–∏—Ç: –±–∞–∑–∞ –∑–Ω–∞–Ω–∏–π, —á–∞—Ç—ã –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤ –∏ –ø—Ä–æ—á–µ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ, —á—Ç–æ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ –∫–ª—É–±–µ.

–î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞—á–∞—Ç—å"`

	selector := &tele.ReplyMarkup{}
	selector.Inline(
		selector.Row(selector.URL("–ù–∞—á–∞—Ç—å", fmt.Sprintf("tg://resolve?domain=%s", c.Bot().Me.Username))),
	)

	return c.Reply(message, &tele.SendOptions{
		ParseMode:   tele.ModeMarkdown,
		ReplyMarkup: selector,
	})
}
